Search.setIndex({"docnames": ["api", "design", "getting_started", "index"], "filenames": ["api.rst", "design.rst", "getting_started.rst", "index.rst"], "titles": ["API Reference", "Design philosophy", "Getting started", "tsod: Anomaly Detection for time series data."], "terms": {"tsod": [0, 1, 2], "rangedetector": [0, 2], "constantvaluedetector": [0, 2], "constantgradientdetector": 0, "gradientdetector": 0, "diffdetector": 0, "combineddetector": [0, 2], "class": 0, "min_valu": 0, "inf": 0, "max_valu": [0, 2], "quantil": 0, "none": 0, "detect": [0, 2], "valu": [0, 3], "outsid": 0, "rang": [0, 2], "paramet": [0, 2], "float": 0, "minimum": 0, "threshold": 0, "maximum": 0, "list": 0, "2": [0, 1, 2], "default": 0, "0": [0, 1, 2], "1": [0, 1, 2], "same": 0, "min": [0, 2], "max": [0, 2], "exampl": [0, 1, 3], "normal_data": [0, 2], "pd": [0, 2], "seri": [0, 2], "np": 0, "random": 0, "normal": [0, 2], "size": 0, "100": 0, "abnormal_data": 0, "6": 0, "15": 0, "57": 0, "60": 0, "73": 0, "5": 0, "normal_data_with_some_outli": 0, "12": 0, "13": 0, "20": 0, "90": 0, "7": 0, "detector": [0, 2], "anomali": [0, 2], "fit": [0, 2], "infer": 0, "from": [0, 1, 2], "data": 0, "001": 0, "999": 0, "time": 0, "possibl": [0, 1], "return": 0, "bool": [0, 2], "true": [0, 2], "type": 0, "set": 0, "base": [0, 1, 2], "save": 0, "path": 0, "str": 0, "later": [0, 2], "us": 0, "file": [0, 1], "like": 0, "object": 0, "load": 0, "valid": 0, "datafram": 0, "check": 0, "input": 0, "i": [0, 1, 2, 3], "correct": 0, "format": 0, "possibli": 0, "adjust": 0, "window_s": 0, "int": 0, "3": [0, 2], "1e": 0, "07": 0, "constant": 0, "over": 0, "longer": 0, "period": 0, "commonli": 0, "caus": 0, "sensor": [0, 3], "failur": 0, "which": 0, "get": 0, "stuck": 0, "level": 0, "gradient": 0, "typic": 0, "linear": 0, "interpol": 0, "long": 0, "interv": 0, "minium": 0, "window": 0, "consid": 0, "max_gradi": 0, "direct": 0, "both": 0, "abrupt": 0, "chang": [0, 2], "rate": [0, 2], "per": 0, "second": 0, "posit": 0, "neg": 0, "max_diff": 0, "sudden": 0, "shift": 0, "irrespect": 0, "axi": 0, "similar": 0, "function": 0, "actual": 0, "between": [0, 1], "point": 0, "combin": 0, "It": [0, 3], "sever": 0, "strategi": 0, "anomaly_detector": 0, "detected_anomali": 0, "count": 0, "integ": 0, "number": 0, "occurr": 0, "index": 0, "start": 0, "stop": 0, "first": 0, "rais": 0, "valueerror": 0, "present": 0, "support": 0, "argument": 0, "option": 0, "recommend": 0, "hampeldetector": 0, "filter": 0, "implement": 0, "work": 0, "numpi": [0, 1], "arrai": 0, "numba": 0, "The": [0, 1, 2], "so": 0, "half": 0, "element": 0, "oppos": 0, "specifi": 0, "span": 0, "thi": [0, 3], "mark": 0, "an": [0, 1, 2], "outlier": [0, 2], "A": 0, "low": 0, "narrow": 0, "band": 0, "within": 0, "ar": [0, 1], "deem": 0, "n_sigma": 0, "access": [1, 3], "new": 1, "featur": 1, "common": 1, "oper": 1, "read": 1, "should": 1, "onli": 1, "need": 1, "few": 1, "line": 1, "code": 1, "make": 1, "extens": 1, "exist": 1, "standard": 1, "librari": [1, 2], "scientif": 1, "comput": 1, "matplotlib": 1, "panda": [1, 2], "pypi": 1, "pip": 1, "By": 1, "provid": [1, 3], "mani": 1, "cut": 1, "past": 1, "avail": 1, "two": 1, "form": [1, 2], "unit": 1, "test": 1, "jupyt": 1, "notebook": 1, "project": 1, "licens": 1, "under": 1, "mit": 1, "softwar": 1, "free": 1, "charg": 1, "inspect": 1, "modif": 1, "develop": 1, "github": 1, "along": 1, "complet": 1, "discuss": 1, "we": 1, "believ": 1, "end": 1, "user": [1, 3], "result": 1, "histor": 1, "version": 1, "behaviour": 1, "older": 1, "system": [1, 3], "specif": [1, 3], "http": 1, "com": 1, "dhi": [1, 3], "archiv": 1, "main": 1, "zip": 1, "timeseri": 2, "alwai": 2, "some": 2, "case": 2, "datetimeindex": 2, "see": 2, "below": 2, "select": 2, "one": 2, "more": [2, 3], "e": 2, "g": 2, "defin": 2, "without": 2, "ani": 2, "dataset": 2, "import": 2, "rd": 2, "out": 2, "anom": 2, "fals": 2, "dtype": 2, "anomal": 2, "float64": 2, "configur": 2, "cd": 2, "joblib": 2, "disk": 2, "my_detector": 2, "some_data": 2, "convert": 2, "df": 2, "read_csv": 2, "mydata": 2, "csv": 2, "parse_d": 2, "index_col": 2, "my_seri": 2, "water_level": 2, "mikeio": 2, "dfs0": 2, "simpl": [2, 3], "to_datafram": 2, "my_series_2": 2, "rainfal": 2, "often": 3, "faulti": 3, "miss": 3, "observ": 3, "These": 3, "must": 3, "automat": 3, "replac": 3, "feasibl": 3, "befor": 3, "feed": 3, "numer": 3, "simul": 3, "engin": 3, "boundari": 3, "condit": 3, "real": 3, "decis": 3, "packag": 3, "aim": 3, "algorithm": 3, "tailor": 3, "water": 3, "domain": 3, "instal": 3, "deploi": 3, "operation": 3, "everyon": 3, "open": 3, "sourc": 3}, "objects": {"tsod": [[0, 0, 1, "", "CombinedDetector"], [0, 0, 1, "", "ConstantGradientDetector"], [0, 0, 1, "", "ConstantValueDetector"], [0, 0, 1, "", "DiffDetector"], [0, 0, 1, "", "GradientDetector"], [0, 0, 1, "", "RangeDetector"]], "tsod.CombinedDetector": [[0, 1, 1, "", "count"], [0, 1, 1, "", "detect"], [0, 1, 1, "", "fit"], [0, 1, 1, "", "index"], [0, 1, 1, "", "save"], [0, 1, 1, "", "validate"]], "tsod.ConstantGradientDetector": [[0, 1, 1, "", "detect"], [0, 1, 1, "", "fit"], [0, 1, 1, "", "save"], [0, 1, 1, "", "validate"]], "tsod.ConstantValueDetector": [[0, 1, 1, "", "detect"], [0, 1, 1, "", "fit"], [0, 1, 1, "", "save"], [0, 1, 1, "", "validate"]], "tsod.DiffDetector": [[0, 1, 1, "", "detect"], [0, 1, 1, "", "fit"], [0, 1, 1, "", "save"], [0, 1, 1, "", "validate"]], "tsod.GradientDetector": [[0, 1, 1, "", "detect"], [0, 1, 1, "", "fit"], [0, 1, 1, "", "save"], [0, 1, 1, "", "validate"]], "tsod.RangeDetector": [[0, 1, 1, "", "detect"], [0, 1, 1, "", "fit"], [0, 1, 1, "", "save"], [0, 1, 1, "", "validate"]], "tsod.hampel": [[0, 0, 1, "", "HampelDetector"]], "tsod.hampel.HampelDetector": [[0, 1, 1, "", "detect"], [0, 1, 1, "", "fit"], [0, 1, 1, "", "save"], [0, 1, 1, "", "validate"]]}, "objtypes": {"0": "py:class", "1": "py:method"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"]}, "titleterms": {"api": 0, "refer": 0, "gener": 0, "hampel": 0, "design": 1, "philosophi": 1, "easi": 1, "us": 1, "instal": 1, "get": [1, 2], "start": [1, 2], "open": 1, "sourc": 1, "collabor": 1, "reproduc": 1, "exampl": 2, "save": 2, "load": 2, "data": [2, 3], "format": 2, "tsod": 3, "anomali": 3, "detect": 3, "time": 3, "seri": 3}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"API Reference": [[0, "api-reference"]], "Generic": [[0, "generic"]], "Hampel": [[0, "hampel"]], "Design philosophy": [[1, "design-philosophy"]], "Easy to use": [[1, "easy-to-use"]], "Easy to install": [[1, "easy-to-install"]], "Easy to get started": [[1, "easy-to-get-started"]], "Open Source\u200b": [[1, "open-source"]], "Easy to collaborate\u200b": [[1, "easy-to-collaborate"]], "Reproducible": [[1, "reproducible"]], "Getting started": [[2, "getting-started"]], "Example": [[2, "example"]], "Saving and loading": [[2, "saving-and-loading"]], "Data formats": [[2, "data-formats"]], "tsod: Anomaly Detection for time series data.": [[3, "tsod-anomaly-detection-for-time-series-data"]]}, "indexentries": {"combineddetector (class in tsod)": [[0, "tsod.CombinedDetector"]], "constantgradientdetector (class in tsod)": [[0, "tsod.ConstantGradientDetector"]], "constantvaluedetector (class in tsod)": [[0, "tsod.ConstantValueDetector"]], "diffdetector (class in tsod)": [[0, "tsod.DiffDetector"]], "gradientdetector (class in tsod)": [[0, "tsod.GradientDetector"]], "hampeldetector (class in tsod.hampel)": [[0, "tsod.hampel.HampelDetector"]], "rangedetector (class in tsod)": [[0, "tsod.RangeDetector"]], "count() (tsod.combineddetector method)": [[0, "tsod.CombinedDetector.count"]], "detect() (tsod.combineddetector method)": [[0, "tsod.CombinedDetector.detect"]], "detect() (tsod.constantgradientdetector method)": [[0, "tsod.ConstantGradientDetector.detect"]], "detect() (tsod.constantvaluedetector method)": [[0, "tsod.ConstantValueDetector.detect"]], "detect() (tsod.diffdetector method)": [[0, "tsod.DiffDetector.detect"]], "detect() (tsod.gradientdetector method)": [[0, "tsod.GradientDetector.detect"]], "detect() (tsod.rangedetector method)": [[0, "tsod.RangeDetector.detect"]], "detect() (tsod.hampel.hampeldetector method)": [[0, "tsod.hampel.HampelDetector.detect"]], "fit() (tsod.combineddetector method)": [[0, "tsod.CombinedDetector.fit"]], "fit() (tsod.constantgradientdetector method)": [[0, "tsod.ConstantGradientDetector.fit"]], "fit() (tsod.constantvaluedetector method)": [[0, "tsod.ConstantValueDetector.fit"]], "fit() (tsod.diffdetector method)": [[0, "tsod.DiffDetector.fit"]], "fit() (tsod.gradientdetector method)": [[0, "tsod.GradientDetector.fit"]], "fit() (tsod.rangedetector method)": [[0, "tsod.RangeDetector.fit"]], "fit() (tsod.hampel.hampeldetector method)": [[0, "tsod.hampel.HampelDetector.fit"]], "index() (tsod.combineddetector method)": [[0, "tsod.CombinedDetector.index"]], "save() (tsod.combineddetector method)": [[0, "tsod.CombinedDetector.save"]], "save() (tsod.constantgradientdetector method)": [[0, "tsod.ConstantGradientDetector.save"]], "save() (tsod.constantvaluedetector method)": [[0, "tsod.ConstantValueDetector.save"]], "save() (tsod.diffdetector method)": [[0, "tsod.DiffDetector.save"]], "save() (tsod.gradientdetector method)": [[0, "tsod.GradientDetector.save"]], "save() (tsod.rangedetector method)": [[0, "tsod.RangeDetector.save"]], "save() (tsod.hampel.hampeldetector method)": [[0, "tsod.hampel.HampelDetector.save"]], "validate() (tsod.combineddetector method)": [[0, "tsod.CombinedDetector.validate"]], "validate() (tsod.constantgradientdetector method)": [[0, "tsod.ConstantGradientDetector.validate"]], "validate() (tsod.constantvaluedetector method)": [[0, "tsod.ConstantValueDetector.validate"]], "validate() (tsod.diffdetector method)": [[0, "tsod.DiffDetector.validate"]], "validate() (tsod.gradientdetector method)": [[0, "tsod.GradientDetector.validate"]], "validate() (tsod.rangedetector method)": [[0, "tsod.RangeDetector.validate"]], "validate() (tsod.hampel.hampeldetector method)": [[0, "tsod.hampel.HampelDetector.validate"]]}})